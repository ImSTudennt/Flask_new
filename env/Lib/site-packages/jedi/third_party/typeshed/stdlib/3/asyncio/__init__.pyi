import sys
from typing import Type

from .base_events import BaseEventLoop as BaseEventLoop
from .coroutines import coroutine as coroutine
from .coroutines import iscoroutine as iscoroutine
from .coroutines import iscoroutinefunction as iscoroutinefunction
from .events import AbstractEventLoop as AbstractEventLoop
from .events import AbstractEventLoopPolicy as AbstractEventLoopPolicy
from .events import AbstractServer as AbstractServer
from .events import Handle as Handle
from .events import TimerHandle as TimerHandle
from .events import _get_running_loop as _get_running_loop
from .events import _set_running_loop as _set_running_loop
from .events import get_child_watcher as get_child_watcher
from .events import get_event_loop as get_event_loop
from .events import get_event_loop_policy as get_event_loop_policy
from .events import new_event_loop as new_event_loop
from .events import set_child_watcher as set_child_watcher
from .events import set_event_loop as set_event_loop
from .events import set_event_loop_policy as set_event_loop_policy
from .futures import Future as Future
from .futures import isfuture as isfuture
from .futures import wrap_future as wrap_future
from .locks import BoundedSemaphore as BoundedSemaphore
from .locks import Condition as Condition
from .locks import Event as Event
from .locks import Lock as Lock
from .locks import Semaphore as Semaphore
from .protocols import BaseProtocol as BaseProtocol
from .protocols import DatagramProtocol as DatagramProtocol
from .protocols import Protocol as Protocol
from .protocols import SubprocessProtocol as SubprocessProtocol
from .queues import LifoQueue as LifoQueue
from .queues import PriorityQueue as PriorityQueue
from .queues import Queue as Queue
from .queues import QueueEmpty as QueueEmpty
from .queues import QueueFull as QueueFull
from .streams import StreamReader as StreamReader
from .streams import StreamReaderProtocol as StreamReaderProtocol
from .streams import StreamWriter as StreamWriter
from .streams import open_connection as open_connection
from .streams import start_server as start_server
from .subprocess import create_subprocess_exec as create_subprocess_exec
from .subprocess import create_subprocess_shell as create_subprocess_shell
from .tasks import ALL_COMPLETED as ALL_COMPLETED
from .tasks import FIRST_COMPLETED as FIRST_COMPLETED
from .tasks import FIRST_EXCEPTION as FIRST_EXCEPTION
from .tasks import Task as Task
from .tasks import as_completed as as_completed
from .tasks import ensure_future as ensure_future
from .tasks import gather as gather
from .tasks import run_coroutine_threadsafe as run_coroutine_threadsafe
from .tasks import shield as shield
from .tasks import sleep as sleep
from .tasks import wait as wait
from .tasks import wait_for as wait_for
from .transports import BaseTransport as BaseTransport
from .transports import DatagramTransport as DatagramTransport
from .transports import ReadTransport as ReadTransport
from .transports import SubprocessTransport as SubprocessTransport
from .transports import Transport as Transport
from .transports import WriteTransport as WriteTransport

if sys.version_info >= (3, 7):
    from .events import get_running_loop as get_running_loop
if sys.version_info >= (3, 8):
    from .exceptions import CancelledError as CancelledError
    from .exceptions import IncompleteReadError as IncompleteReadError
    from .exceptions import InvalidStateError as InvalidStateError
    from .exceptions import LimitOverrunError as LimitOverrunError
    from .exceptions import \
        SendfileNotAvailableError as SendfileNotAvailableError
    from .exceptions import TimeoutError as TimeoutError
else:
    if sys.version_info >= (3, 7):
        from .events import SendfileNotAvailableError as SendfileNotAvailableError
    from .futures import CancelledError as CancelledError
    from .futures import InvalidStateError as InvalidStateError
    from .futures import TimeoutError as TimeoutError
    from .streams import IncompleteReadError as IncompleteReadError
    from .streams import LimitOverrunError as LimitOverrunError

if sys.version_info >= (3, 7):
    from .protocols import BufferedProtocol as BufferedProtocol

if sys.version_info >= (3, 7):
    from .runners import run as run

if sys.version_info >= (3, 7):
    from .tasks import all_tasks as all_tasks
    from .tasks import create_task as create_task
    from .tasks import current_task as current_task
if sys.version_info >= (3, 9):
    from .threads import to_thread as to_thread

DefaultEventLoopPolicy: Type[AbstractEventLoopPolicy]
if sys.platform == "win32":
    from .windows_events import *

if sys.platform != "win32":
    from .streams import open_unix_connection as open_unix_connection
    from .streams import start_unix_server as start_unix_server
    from .unix_events import AbstractChildWatcher as AbstractChildWatcher
    from .unix_events import FastChildWatcher as FastChildWatcher
    from .unix_events import SafeChildWatcher as SafeChildWatcher
    from .unix_events import SelectorEventLoop as SelectorEventLoop

    if sys.version_info >= (3, 8):
        from .unix_events import MultiLoopChildWatcher as MultiLoopChildWatcher
        from .unix_events import ThreadedChildWatcher as ThreadedChildWatcher
